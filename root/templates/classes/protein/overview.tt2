<h2>[% fields.name.data.label %]</h2>


[%
   WRAPPER highlight_box;

    status;

    WRAPPER $field_block title="Molecular weight" key="estimated_molecular_weight";
        fields.estimated_molecular_weight.data;
        ' kD <span id="fade">(estimated)</span>';
    END;

    WRAPPER $field_block title="Isoelectric point" key="estimated_isoelectric_point";
        fields.estimated_isoelectric_point.data;
        ' <span id="fade">(estimated)</span>';
    END;

END;

 '<div class="description">';
 fields.description.data;
#WRAPPER $field_block title="";
#  central_dogma;
#END;

WRAPPER curator_block title="Type";
   fields.type.data;
END;



remarks;

WRAPPER $field_block title="Best human ortholog" key="best_human_match";
    tag2link(fields.best_human_match.data.hit, fields.best_human_match.data.description);
    '<br />(E value:' _ fields.best_human_match.data.evalue _ ')';
END;
'</div>';



%]

<div style="clear:both">
[% FOREACH item IN fields.pfam_graph.data %]
[% t = item.source; %]
[% t %]:
[%
    xrefs = [];
    FOREACH region IN item.value.regions;
       match = region.href.match('href\":\"(.*)/(.*)\"');
       IF match;
           type = match.0;
           acc = match.1;
	   region.href = site.external_urls.$type.search.replace("%s",acc);
       END;
    END;

%]
  <div class="pfam_graph" id="dg-[% t %]" data-seq='[%- json_encode(item.value || {}) -%]' -%]'>
</div>
[% END %]
</div>


[%
        build_data_table( order = ['gene', 'model', 'length_unspliced','type', 'cds', 'length_spliced','protein','length_protein'],
                          columns = { gene => 'Gene',
                                      model => 'Transcript',
                                      type => 'Type',
                                      length_spliced   => 'Coding<br />Sequence<br />Length (nt)',
                                      length_unspliced => 'Transcript<br />Length (nt)',
                                      cds => 'Coding<br />Sequence<br />(CDS)',
                                      protein => 'Protein',
                                      length_protein => 'Protein<br />Length (aa)'},
                          passed_data = fields.corresponding_all.data,
                          key = 'gene_models_constructed' );
%]




<script>
  WB.getPlugin("pfam", function(){
    $jq(".pfam_graph").each(function(index, element) {
	var seqData = $jq(element).data("seq");
        var p = PfamGraphic;
        p.initialize();
        p.render("#" + this.id, JSON.stringify(seqData));
    });
  });
</script>
